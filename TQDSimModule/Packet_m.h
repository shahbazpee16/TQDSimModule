//
// Generated file, do not edit! Created by nedtool 5.6 from Packet.msg.
//

#ifndef __PACKET_M_H
#define __PACKET_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0506
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>Packet.msg:15</tt> by nedtool.
 * <pre>
 * //
 * // Represents a packet in the network.
 * //
 * packet Packet
 * {
 *     int srcAddr \@packetData;
 *     int destAddr \@packetData;
 *     int hopCount \@packetData;
 *     double size \@packetData;
 *     int route[];
 *     int arraySizeAndIndex = 1;
 *     simtime_t queueDelayPerHop;
 *     string packetName;
 *     int timeSlotCounter;
 * }
 * </pre>
 */
class Packet : public ::omnetpp::cPacket
{
  protected:
    int srcAddr;
    int destAddr;
    int hopCount;
    double size;
    int *route; // array ptr
    unsigned int route_arraysize;
    int arraySizeAndIndex;
    ::omnetpp::simtime_t queueDelayPerHop;
    ::omnetpp::opp_string packetName;
    int timeSlotCounter;

  private:
    void copy(const Packet& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const Packet&);

  public:
    Packet(const char *name=nullptr, short kind=0);
    Packet(const Packet& other);
    virtual ~Packet();
    Packet& operator=(const Packet& other);
    virtual Packet *dup() const override {return new Packet(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getSrcAddr() const;
    virtual void setSrcAddr(int srcAddr);
    virtual int getDestAddr() const;
    virtual void setDestAddr(int destAddr);
    virtual int getHopCount() const;
    virtual void setHopCount(int hopCount);
    virtual double getSize() const;
    virtual void setSize(double size);
    virtual void setRouteArraySize(unsigned int size);
    virtual unsigned int getRouteArraySize() const;
    virtual int getRoute(unsigned int k) const;
    virtual void setRoute(unsigned int k, int route);
    virtual int getArraySizeAndIndex() const;
    virtual void setArraySizeAndIndex(int arraySizeAndIndex);
    virtual ::omnetpp::simtime_t getQueueDelayPerHop() const;
    virtual void setQueueDelayPerHop(::omnetpp::simtime_t queueDelayPerHop);
    virtual const char * getPacketName() const;
    virtual void setPacketName(const char * packetName);
    virtual int getTimeSlotCounter() const;
    virtual void setTimeSlotCounter(int timeSlotCounter);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const Packet& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, Packet& obj) {obj.parsimUnpack(b);}


#endif // ifndef __PACKET_M_H

